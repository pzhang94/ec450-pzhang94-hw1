{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 In my code, I used one global variable, state, to keep track of what part of the sequence was being executed. Each state represented a specific part of the sequence and, as a result, had unique characteristics. I decided to implement the SOS sequence with a 18 step process. As you transitioned to a new state\'97this happened when the blink_counter reached 0\'97the blink _counter would be reset to the necessary value and the LED light would be toggled. By changing the length of the blink_counter, I was able to change the duration of the rest period of the LED as well as the on period of the LED. For this homework, I used the LED1 on P1.0.}